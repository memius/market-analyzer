cron:

# seconds are not allowed. only hours|mins|minutes.

# - description: scrapes articles
#   url: /scrape
#   schedule: every 180 minutes

# - description: runs backends
#   url: /_ah/start
#   schedule: every 14 minutes
# # but you need this only once. hm. is started automatically when you send a task to a backend.

- description: sends scrape to backend  #(right now: test, not scrape)
  url: /send_to_backend
  schedule: every 2 minutes

# - description: removes duplicate articles and companies from db
#   url: /dupes
#   schedule: every 180 minutes

# - description: cleans up article text for display
#   url: /clean
#   schedule: every 180 minutes

# - description: analyzes sentiment of new articles
#   url: /analyze
#   schedule: every 180 minutes

# - description: analyzes sentiment of all articles
#   url: /analyze_old_articles
#   schedule: every 1 minutes

# - description: cleans all articles
#   url: /clean_old_articles
#   schedule: every 1 minutes

# #- description: the whole monolithic shebang
# #  url: /.*
# #  schedule: every 1 hours







cron
# - description: sends scrape to backend  #(right now: test, not scrape)
#   url: /send_to_backend
#   schedule: every 2 minutes

app.yaml
# # - url: /send_to_backend
# #   script: test.app
# #   login: admin

# backends:
# - name: backendscraping
#   class: B1

# class BackendHandler(webapp2.RequestHandler):
#     def get(self):
#         taskqueue.add(url='/test', target='backendscraping') # , params={})
#         #taskqueue.add(url='/test', target='backend_scraping') # , params={})
#         #scrape.scrape()

# class TestHandler(webapp2.RequestHandler):
#     def get(self):
#         test.test()


# no, not needed:
#         ('/send_to_backend', BackendHandler),
#         ('/test', TestHandler),


# def test():
#     company = Company()
#     company.name = "Advanced Micro Devices, Inc"
#     company.exchange = "NASDAQ"
#     company.put()
